<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2015 Orange
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<groupId>com.orange.clara.cloud</groupId>
		<artifactId>cloud-paas-webapp</artifactId>
		<version>3.0.660-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>cloud-paas-webapp-war</artifactId>
	<packaging>war</packaging>
	<name>cloud-paas-webapp-war</name>

	<description>
		To launch a mocked version of this war just do a :
		
			mvn clean -Pmocked jetty:run-war -DskipTests
			
		UI and WS will be available locally on http://localhost:8080/ 
		and all services calls are mocked (no database persistence, no business rule checked)
	</description>

	<properties>
		<application.context>/WEB-INF/spring-config/application-context.xml</application.context>
		<!--<wicket.configuration>development</wicket.configuration> -->
		<wicket.configuration>deployment</wicket.configuration>  
		<tests.mode>false</tests.mode>
		<mock.mode>false</mock.mode>
		<maven.build.timestamp.format>dd/MM/yyyy-HH:mm</maven.build.timestamp.format>
		<timestamp>${maven.build.timestamp}</timestamp>

	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.shrinkwrap</groupId>
			<artifactId>shrinkwrap-api</artifactId>
			<version>1.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.shrinkwrap</groupId>
			<artifactId>shrinkwrap-impl-base</artifactId>
			<version>1.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>10.6.2.1</version>
			<scope>test</scope>
		</dependency>
		
		<!-- to configure apache tomcat high perf connection pool - provided cause tomcat has it -->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jdbc</artifactId>
			<version>8.0.15</version>
			<scope>provided</scope>
		</dependency>
		
		
		
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
		</dependency>
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>

		<!-- this is broken. bring log4j and many ununsable libs -->
		<!-- http://stackoverflow.com/questions/24755775/activemq-all-forces-me-to-use-log4j-slf4j-implementation -->

		<!-- <dependency> -->
		<!-- <groupId>org.apache.activemq</groupId> -->
		<!-- <artifactId>activemq-all</artifactId> -->
		<!-- </dependency> -->



		<!-- activemq-kahadb-store -->
		<!-- activemq-client -->
		<!-- activemq-broker -->
		<!-- activemq-spring -->
		<!-- activemq-jms-pool -->
		<!-- activemq-shiro -->


		<!-- activemq-stomp -->
		<!-- activemq-openwire-legacy -->
		<!-- activemq-camel -->
		<!-- activemq-console -->

		<!-- activemq-pool -->
		<!-- activemq-amqp -->
		<!-- activemq-http -->
		<!-- activemq-mqtt -->

		<!-- activemq-jaas -->

		<!-- activemq-leveldb-store -->

		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-broker</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-client</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-kahadb-store</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-spring</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-jms_1.1_spec</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-cloudfoundry-connector</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-spring-service-connector</artifactId>
			<exclusions>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.amqp</groupId>
			<artifactId>spring-rabbit</artifactId>
			<exclusions>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-config-client</artifactId>
		</dependency>
		<dependency>
			<groupId>com.orange.clara.cloud</groupId>
			<artifactId>cloud-paas-archive</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.xbean</groupId>
			<artifactId>xbean-spring</artifactId>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.orange.clara.cloud</groupId>
			<artifactId>cloud-paas-db</artifactId>
		</dependency>
		<dependency>
			<groupId>com.orange.clara.cloud</groupId>
			<artifactId>cloud-paas-services-impl</artifactId>
		</dependency>
		<dependency>
			<groupId>com.orange.clara.cloud</groupId>
			<artifactId>cloud-mvn-consumer</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<!-- used for its Stubbed activation -->
		<dependency>
			<groupId>com.orange.clara.cloud</groupId>
			<artifactId>cloud-paas-activation-stubbed-impl</artifactId>
			<version>${project.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<!-- used for its Stubbed activation -->
		<dependency>
			<groupId>com.orange.clara.cloud</groupId>
			<artifactId>cloud-paas-activation-stubbed-impl</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Plugin Common for tests Assertions measurement -->
		<dependency>
			<groupId>com.orange.clara.cloud</groupId>
			<artifactId>cloud-commons</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.orange.clara.cloud</groupId>
			<artifactId>cloud-commons-test-configurations</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- test database module to dynamically create dbaas database -->
		<dependency>
			<groupId>com.orange.clara.cloud</groupId>
			<artifactId>cloud-paas-test-database</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Activation plugins -->
		<!-- Plugin CloudFoundry -->
		<dependency>
			<groupId>com.orange.clara.cloud</groupId>
			<artifactId>cloud-iaas-cloudfoundry-consumer</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- End Activation plugins -->

		<dependency>
			<groupId>com.orange.clara.cloud</groupId>
			<artifactId>cloud-paas-ws-provider</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<dependency>
			<groupId>com.orange.clara.cloud</groupId>
			<artifactId>cloud-technical-model</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-ldap</artifactId>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.directory.shared</groupId>
			<artifactId>shared-ldap</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.directory.server</groupId>
			<artifactId>apacheds-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.directory.server</groupId>
			<artifactId>apacheds-core-entry</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.directory.server</groupId>
			<artifactId>apacheds-protocol-shared</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.directory.server</groupId>
			<artifactId>apacheds-protocol-ldap</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.directory.server</groupId>
			<artifactId>apacheds-server-jndi</artifactId>
		</dependency>
		<dependency>
			<groupId>ldapsdk</groupId>
			<artifactId>ldapsdk</artifactId>
		</dependency>

		<!-- wicket -->
		<dependency>
			<groupId>org.jasypt</groupId>
			<artifactId>jasypt-wicket15</artifactId>
			<version>1.9.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.wicket</groupId>
			<artifactId>wicket-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.wicket</groupId>
			<artifactId>wicket-spring</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.wicket</groupId>
			<artifactId>wicket-ioc</artifactId>
			<exclusions>
				<exclusion>
					<!-- cglib-nodep already provided by some cloud-*-model -->
					<groupId>cglib</groupId>
					<artifactId>cglib</artifactId>
				</exclusion>
			</exclusions>

		</dependency>
		<dependency>
			<groupId>org.apache.wicket</groupId>
			<artifactId>wicket-extensions</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.wicket</groupId>
			<artifactId>wicket-auth-roles</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.wicket</groupId>
			<artifactId>wicket-bean-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.wicketstuff</groupId>
			<artifactId>wicketstuff-annotation</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
		</dependency>
		<!-- aop -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>
		<!-- feature toggles -->
		<dependency>
			<groupId>org.togglz</groupId>
			<artifactId>togglz-servlet</artifactId>
		</dependency>
		<dependency>
			<groupId>org.togglz</groupId>
			<artifactId>togglz-console</artifactId>
		</dependency>
		<dependency>
			<groupId>org.togglz</groupId>
			<artifactId>togglz-testing</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- This library is scoped as runtime so that it is included in the war 
			and to avoid ClassNotFoundException: javax.xml.transform.stax.StAXSource 
			with Jonas 5.2.x -->
		<!-- Not needed with JBoss, this library is in the JDK -->
		<dependency>
			<groupId>javax.xml</groupId>
			<artifactId>jaxp-api</artifactId>
		</dependency>
		<dependency>
			<groupId>de.agilecoders.wicket.webjars</groupId>
			<artifactId>wicket-webjars</artifactId>
			<exclusions>
				<exclusion>
					<!-- required to exclude javassist an used the one provided by hibernate -->
					<artifactId>javassist</artifactId>
					<groupId>javassist</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery-blockui</artifactId>
			<exclusions>
				<exclusion>
					<!-- jquery is included inside wicket since wicket 6 -->
					<artifactId>org.webjars</artifactId>
					<groupId>jquery</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>codemirror</artifactId>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/webapp/WEB-INF</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<filtering>true</filtering>
				<directory>src/main/webapp</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</testResource>
			<testResource>
				<filtering>true</filtering>
				<directory>src/test/resources</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
					<webResources>
						<resource>
							<directory>src/main/webapp</directory>
							<filtering>true</filtering>
							<includes>
								<include>**/*.jsp</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<classifier>exec</classifier>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- compress all css in one file with .min suffix. Automatically handled by wicket PackageResourcesReference in deployment mode -->
			<plugin>
				<groupId>com.samaxes.maven</groupId>
				<artifactId>minify-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>default-minify</id>
						<phase>prepare-package</phase>
						<configuration>
							<webappSourceDir>${project.build.outputDirectory}</webappSourceDir>
							<cssSourceDir>com/francetelecom/clara/cloud/presentation/resource</cssSourceDir>
							<!-- CSS Files -->
							<cssSourceFiles>
								<cssSourceFile>elpaaso_common.css</cssSourceFile>
								<cssSourceFile>elpaaso_designer.css</cssSourceFile>
							</cssSourceFiles>
							<webappTargetDir>${project.build.outputDirectory}</webappTargetDir>
							<cssTargetDir>com/francetelecom/clara/cloud/presentation/resource</cssTargetDir>
							<cssFinalFile>elpaaso-main.css</cssFinalFile>
						</configuration>
						<goals>
							<goal>minify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>

		<profile>

			<id>mocked</id>
			<properties>
				<application.context>/WEB-INF/spring-config/application-context-mock.xml</application.context>
				<wicket.configuration>development</wicket.configuration>
				<tests.mode>false</tests.mode>
				<mock.mode>true</mock.mode>
			</properties>

			<dependencies>
				<dependency>
					<groupId>com.orange.clara.cloud</groupId>
					<artifactId>cloud-paas-services-mocks</artifactId>
				</dependency>
			</dependencies>

			<build>
				<resources>
					<resource>
						<directory>src/main/mockwebapp/WEB-INF</directory>
						<filtering>true</filtering>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<warSourceDirectory>src/main/mockwebapp</warSourceDirectory>
							<filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
							<webResources>
								<!-- note the order of the following resource elements are important. 
									if there are duplicate files, the first file copied will win -->
								<resource>
									<directory>src/main/mockwebapp</directory>
									<filtering>true</filtering>
									<includes>
										<include>**/*</include>
									</includes>
								</resource>
								<resource>
									<directory>src/main/webapp</directory>
									<filtering>true</filtering>
									<includes>
										<include>**/*</include>
									</includes>
								</resource>
							</webResources>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>jetty-maven-plugin</artifactId>
						<version>8.1.15.v20140411</version>
						<configuration>
							<scanIntervalSeconds>10</scanIntervalSeconds>
							<stopKey>foo</stopKey>
							<stopPort>9999</stopPort>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
