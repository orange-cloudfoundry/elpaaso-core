<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2015 Orange
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>cloud-paas</artifactId>
		<groupId>com.orange.clara.cloud</groupId>
		<version>3.0.377-SNAPSHOT</version>
	</parent>
	<artifactId>cloud-paas-services-int</artifactId>
	<name>${project.artifactId} - Paas services integration tests</name>
	<description>ElPaaSo Services Integration Tests (paas-services layer)

    Here is how to run a single test :
        HowTo : run single test

        cd cloud-orange-paas
        mvn verify -pl :cloud-paas-services-int -DskipUTs -DskipITs=false -Ddatacenter=hudson -Dit.test=PaasServicesEnvJeeProbeIT
    </description>

	<dependencies>
		<!-- Dependencies on other paas modules -->
		<dependency>
			<groupId>com.orange.clara.cloud</groupId>
			<artifactId>cloud-commons-test-configurations</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- This is a temporary dependency after jonas consumer deletion, waiting for new binding for ear/war auto generation -->
			<groupId>com.orange.clara.cloud</groupId>
			<artifactId>cloud-paas-archive</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.orange.clara.cloud</groupId>
			<artifactId>cloud-paas-services</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.orange.clara.cloud</groupId>
			<artifactId>cloud-paas-services-dto</artifactId>
			<scope>test</scope>
		</dependency>
			<!-- Test-jar dependencies: depends on other modules test-classes, not on module itself -->

		<dependency>
			<!-- For logical model catalogs -->
			<groupId>com.orange.clara.cloud</groupId>
			<artifactId>cloud-paas-logical-model</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<!-- TestDataFactory -->
		<dependency>
			<groupId>com.orange.clara.cloud</groupId>
			<artifactId>cloud-technical-model</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<!-- Plugin Common for tests Assertions measurement -->
		<dependency>
			<groupId>com.orange.clara.cloud</groupId>
			<artifactId>cloud-commons</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>

		<!-- Runtime dependencies: loaded by Spring for integration tests. This runtime scope ensure that compilation does not depends on it. -->

		<!-- Implementation of paas-services only needed at runtime (must be) -->
		<dependency>
			<groupId>com.orange.clara.cloud</groupId>
			<artifactId>cloud-paas-services-impl</artifactId>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<artifactId>junit-dep</artifactId>
					<groupId>junit</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Plugin DBaas Cf for Cf tests and 2.0.0-cf profile -->
		<dependency>
			<groupId>com.orange.clara.cloud</groupId>
			<artifactId>cloud-iaas-cloudfoundry-consumer</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- xaas stubs -->
		<dependency>
			<groupId>com.orange.clara.cloud</groupId>
			<artifactId>cloud-mvn-consumer</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<!-- test database module used to create test database on dbaas -->
		<dependency>
			<groupId>com.orange.clara.cloud</groupId>
			<artifactId>cloud-paas-test-database</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
		</dependency>

		<!-- Externals libs dependencies: to compile tests. -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>p6spy</groupId>
			<artifactId>p6spy</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.togglz</groupId>
			<artifactId>togglz-testing</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.togglz</groupId>
			<artifactId>togglz-junit</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- encrypt credentials -->
		<dependency>
			<groupId>org.jasypt</groupId>
			<artifactId>jasypt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jasypt</groupId>
			<artifactId>jasypt-spring31</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-spring</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<skipITs>${skipATs}</skipITs>
				</configuration>
			</plugin>
			<!-- Needed with Eclipse Indigo / m2e 1.0 because there are no m2e connectors for cxf-codegen-plugin for the moment -->
			<!-- This declaration will force m2e to define target/generated-sources/cxf as a source folder in Eclipse -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/cxf</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- generates a test jar for reuse in test -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
						<configuration>
							<skip>false</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
