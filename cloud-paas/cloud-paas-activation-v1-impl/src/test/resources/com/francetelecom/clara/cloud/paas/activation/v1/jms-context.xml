<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:amq="http://activemq.apache.org/schema/core"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

	<!-- JMS queue connection factory : used for unit testing -->
	<amq:pooledConnectionFactory id="asyncTaskHandlingConnectionFactory">
		<amq:connectionFactory>
			<amq:connectionFactory brokerURL="vm://localhost?jms.redeliveryPolicy.maximumRedeliveries=2" />
		</amq:connectionFactory>
	</amq:pooledConnectionFactory>

	<!-- JMS broker -->
	<amq:broker useJmx="true" persistent="true" dataDirectory="${broker.storagepath}" deleteAllMessagesOnStartup="true">
	
		<amq:destinationPolicy>
			<amq:policyMap>
				<amq:policyEntries>
					<amq:policyEntry queue="jms/activationRequestQueue">
						<amq:deadLetterStrategy>
							<amq:sharedDeadLetterStrategy>
								<amq:deadLetterQueue>
									<amq:queue physicalName="jms/activationDeadLetterQueue" />
								</amq:deadLetterQueue>
							</amq:sharedDeadLetterStrategy>
						</amq:deadLetterStrategy>
					</amq:policyEntry>
					<amq:policyEntry queue="jms/activationReplyQueue">
						<amq:deadLetterStrategy>
							<amq:sharedDeadLetterStrategy>
								<amq:deadLetterQueue>
									<amq:queue physicalName="jms/activationDeadLetterQueue" />
								</amq:deadLetterQueue>
							</amq:sharedDeadLetterStrategy>
						</amq:deadLetterStrategy>
					</amq:policyEntry>
				</amq:policyEntries>
			</amq:policyMap>
		</amq:destinationPolicy>
		<amq:transportConnectors>
			<amq:transportConnector uri="tcp://localhost:0" />
		</amq:transportConnectors>
	</amq:broker>

	<!-- JMS queue definition to handle request message : used for unit testing -->
	<amq:queue id="activationRequestQueue" physicalName="jms/activationRequestQueue"/>

	<!-- JMS queue definition to handle reply message -->
	<amq:queue id="activationReplyQueue" physicalName="jms/activationReplyQueue"/>

	<!-- JMS queue definition to handle error message : used for unit testing -->
	<amq:queue id="activationErrorQueue" physicalName="jms/activationErrorQueue"/>

	<!-- JMS queue definition to handle error message : used for unit testing -->
	<amq:queue id="activationDeadLetterQueue" physicalName="jms/activationDeadLetterQueue"/>

</beans>