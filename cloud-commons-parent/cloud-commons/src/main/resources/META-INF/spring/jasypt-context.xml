<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2015 Orange
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

    <bean id="jasyptPrerequisites"
          class="com.francetelecom.clara.cloud.commons.JasyptPrerequisites">
        <constructor-arg value="PAAS_ENCRYPTION_PASSWORD" />
        <constructor-arg value="jasypt.secret" />
    </bean>

    <!--
    
    Configuration for encryptor, based on environment variables.
    
    The encryption password will be read from an environment variable called "PAAS_ENCRYPTION_PASSWORD" 
    which, once the application has been started, could be safely unset.
    
    If Environment variable was not found, this configuration will try to find a jndi property based on jasypt.secret key
    
    -->
    <bean id="environmentVariablesConfiguration"
          class="com.francetelecom.clara.cloud.commons.jasypt.EnvironmentAndJndiStringPBEConfig"
          depends-on="jasyptPrerequisites">
        <constructor-arg value="PAAS_ENCRYPTION_PASSWORD" />
        <constructor-arg value="jasypt.secret" />
        
        <property name="algorithm" value="PBEWithMD5AndDES" />
    </bean>

    <!--                                                                      -->
    <!-- The will be the encryptor used for decrypting configuration values.  -->
    <!--                                                                      -->
    <bean id="configurationEncryptor"
          class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
        <property name="config" ref="environmentVariablesConfiguration" />
    </bean>
    
</beans>