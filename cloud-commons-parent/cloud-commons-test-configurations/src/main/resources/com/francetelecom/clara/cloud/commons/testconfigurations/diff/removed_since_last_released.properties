#
# Copyright (C) 2015 Orange
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#Have a look at http://elpaaso_shp/index.php/Credentials.properties#Updating_properties to update this file

#used by hyperic
dbaas.hyperic.keyword=

# vcloud director
vcloudapi1.url=
vcloudapi1.orgname=
vcloudapi1.username=
vcloudapi1.password=
vcloudapi1.proxyHost=
vcloudapi1.proxyPort=
vcloudapi1.useFakeSSL=
vcloudapi1.vmtemplates.catalog=
vcloudapi1.vdc.name=
vcloudapi1.network.management.name=
#Allows detailed logging from VCD api
#Logs all HTTP exchanges, may impact performance
#Activate only for debugging
#FIXME : document whether ops should prefer use of HttpClient logback log level instead to get hot reload + difference in traces from HttpClient
#FIXME: would require decompiling VCD SDK to understand effect. 
vcloudapi1.verboseLogs=true


#### VCD TUNNELING
#### # ==========================================================================================
#### # SSH tunneling : credentials of gateway VM
#### # Required if tests are executed outside VCD
#### # ===========================================================================================
####
#tunnel.host=
tunnel.host=
tunnel.port=
tunnel.user=
tunnel.password=
tunnel.timeout=
tunnel.port.min=
tunnel.port.max=


# domain name used by the router subscription to build urls to acces web GUIs, must be declared as a wildcard DNS.
router.domain=
# Port on which the CF router is listening
router.port=
# URL of the NATS server, used to interact with the CF router
router.nats.url=

# As Jenkins is running on FaaS, we either have to use p-goodway or our squid on VDR-QA from its NET_APPS_SERV IP
# elpaaso-squid-ige.internal-qa.paas. Now squid has only one NIC left (no more IP on OFFICE_GINIS)
iaas.api.aws.proxyHost=
iaas.api.aws.proxyPort=
iaas.api.aws.accesskey=
iaas.api.aws.secretkey=
aws.tunnel.host=
aws.tunnel.port=
aws.tunnel.user=
aws.tunnel.password=
aws.tunnel.timeout=
aws.tunnel.port.min=
aws.tunnel.port.max=

### IaaS proxy
aws.tunnel.remoteProxy.type=
aws.tunnel.remoteProxy.host=
aws.tunnel.remoteProxy.port=

###IaaS Security groups private keys // encrypted using EncryptAPasswordTest::testEncryptPrivateKey
## gateway
aws.tunnel.identity.gateway.name=
## encrypted with jasyp
aws.tunnel.identity.gateway.privatekey=
aws.tunnel.identity.gateway.publickey=

## elpaaso instances default SG
aws.tunnel.identity.generic-apps.name=
aws.tunnel.identity.generic-apps.privatekey=
aws.tunnel.identity.generic-apps.publickey=

## Enterprise proxy
# netserv1 squid proxy
aws.tunnel.localProxy.type=

# As Jenkins is running on FaaS, we either have to use p-goodway or our squid on VDR-QA from its OFFICE_GIN_IS IP
# elpaaso-squid-ige.internal.paas. This is because this squid has no linux route to return to RSC on its second NIC.
# In the future the OFFICE_GIN_IS NIC will disappear as the OFFICE_GIN_IS network will be released.
aws.tunnel.localProxy.host=
aws.tunnel.localProxy.port=
aws.tunnel.localProxy.nonProxyHosts=


# Hyperic server properties
hyperic.host=
hyperic.port=
hyperic.user=
hyperic.password=
hyperic.portal.ip=
hyperic.portal.port=
hyperic.portal.secured=

# connection timeout used only in hyperic interactions (30s)
monitoring.connection.timeout=
# socket timeout used only in hyperic interactions (300s)
monitoring.socket.timeout=
#Max number of attemps when waiting for agent resources auto discovery
monitoring.discovery.retry.attempts=
#Max duration when waiting for agent resources auto discovery
monitoring.discovery.max.wait.seconds=
#(De)Activate risky features from monitoring
monitoring.features.enabled=
# names of alarm esclation schemes
monitoring.escalationScheme.DAILY_OPS_NOTIFICATION=


#### Uforge ####
usharesoft.url=
usharesoft.user=
usharesoft.password=
usharesoft.space=
usharesoft.proxyHost=
usharesoft.proxyPort=
usharesoft.aws.accesskey=
usharesoft.aws.secretkey=


# Linux settings
# Default NTP servers
linux.ntp.default.server.1=
linux.ntp.default.server.2=
linux.ntp.default.server.3=
linux.ntp.default.zone=
linux.ntp.public.server.1=
linux.ntp.public.server.2=
linux.ntp.public.server.3=
linux.ntp.public.zone=

#IOSW credentials 
#Still using the one for QA
iosw.wdm.api.url=https://www.isow_is_dead.com
iosw.wdm.api.cert.dir=certs
iosw.wdm.api.keystore.file=iosw_wdm.jks
iosw.wdm.api.keystore.password=iosw_wdm
iosw.datapower.publicAddress=http://www.isow_is_dead.com
iosw.wdm.portal.hyperic.keyword=iosw.qa.prisme

iosw.cloud-ws.api.url=http://www.isow_is_dead.com
iosw.cloud-ws.api.cert.dir=certs
iosw.cloud-ws.api.keystore.file=iosw_wdm.jks
iosw.cloud-ws.api.keystore.password=iosw_wdm
iosw.cloud-ws.api.username=iosw_admin
iosw.cloud-ws.api.password=password

#splunk server ip, used for cloudfoundry cf cups syslog drain
splunk.server.ip=
#splunk server password, used for cloudfoundry cf cups syslog drain
splunk.server.password=
#splunk server syslog port, used for cloudfoundry cf cups syslog drain
splunk.server.syslog.port=

splunk.agent.password=

# Splunk server used for Splunk consumer integration test (cloud-iaas-splunk-consumer)
# Deprecated
test.splunk.server.ip=
test.splunk.server.port=
test.splunk.server.password=
test.splunk.agent.password=

