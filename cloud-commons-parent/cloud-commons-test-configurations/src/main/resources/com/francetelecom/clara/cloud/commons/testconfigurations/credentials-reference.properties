#
# Copyright (C) 2015 Orange
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# ====================================================================================
# This file contains the reference set of properties that ElPaaso supports.
#
# ====================================================================================


# This datacenter_name property may be usefull to display debugging information (i.e. check the actual credentials file
# that was loaded)
datacenter_name=reference

# spring profiles : used as JNDI properties (only) by the Paas instance (dogfooding case)
# - iaas-capacity-pooling : enable iaas capacity pooling mechanism (ie. one platform per org only : demo)
# - (describes the profiles here...)
# format :
# spring.profiles.active=profile1,profile2
# example to activate iaas capacity for the demo platform
# spring.profiles.active=iaas-capacity-pooling

#active spring profiles within elpaaso-ui
#to enable rabbitmq
#spring.profiles.active=default,rabbitmq
#to enable activemq + jms
spring.profiles.active=default

#default rabbitmq connection factory settings when activemq profile is activated
paas.rabbitmq.cf.connectiontimeout=30000
paas.rabbitmq.cf.requestedheartbeat=0
paas.rabbitmq.cf.channelcachesize=1

#global paas password. Used to encrypt passwords by JPA in database.
paas.password=set-a-strong-password

# ==========================================================================================
# CloudFoundry API credentials
# There is support both an onprem and a public online instance. The properties are therefore
# duplicated with the .online. property key.
# ==========================================================================================

# CloudFoundry CC API url.
cf.ccng.target=http://localhost
#When driving both an onprem and an online instance, this configures the online settings
cf.online.ccng.target=

#trust self signed certificate
cf.trustSelfSignedCerts=

# Set to true to have lazy initialization of cloudfoundry (login, register subdomain), i.e. initialization is
# performed at first 2.0.0-Cf profile app action. Default is true.
cf.lazyInit=

#Set to "true" to enable access to cloudfoundry api to go though a proxy, for online tests this defined in internet.access.proxyHost and internet.access.proxyPort
# for vdr-qa tests this is defined in cf.ccng.proxyHost and cf.ccng.proxyPort
cf.ccng.use_proxy=

# Optionally defines the proxy host to be used between elpaaso and CF on VDR. Conditional to cf.ccng.use_proxy=true
# Defaults to an invalid host being ignored unless cf.ccng.use_proxy=true
cf.ccng.proxyHost=dummyCcngProxyHost
# Defines the proxy port to be used between elpaaso and CF on VDR. Conditional to cf.ccng.use_proxy=true
# Default is 3128
cf.ccng.proxyPort=9999
#online settings
#Set to "true" to enable access to cloudfoundry api to go though a proxy, defined in internet.access.proxyHost and internet.access.proxyPort
cf.online.ccng.use_proxy=

# CloudFoundry CC API login. Does not require to be admin.
#This account is only org editor, bercheg@gmail.com has billing manager rights.
#This is actually billed on Guillaume's credit card, please avoid waste and stop instances you don't need!
cf.ccng.email=
#online settings
cf.online.ccng.email=

# CloudFoundry CC API password
cf.ccng.passwd
#online settings
cf.online.ccng.passwd=

# CloudFoundry organization to use
cf.ccng.org=
#online settings
cf.online.ccng.org=

# CloudFoundry space to use. Expected to be already created.
cf.ccng.space=
#online settings
cf.online.ccng.space=

#The subdomain to use for apps pushed to Cf. Should map to a CNAME that points to a valid CF instance such as
# "CNAME *.example.org". Will be created if missing in CF.
# E.g. If this config is set into "example.org"
# then an app will have its route1 bound into route1.example.org
cf.subdomain=example.org

#online settings
cf.online.subdomain=

#The max start time in seconds for a single app (i.e. JeeProcessing) composed of one or more instances. Default is 10 mins
cf.appStartTimeoutS=600

# Name of an installed buildpack or url of a remote buildpack to be used for cf-vdr instances
cf.jonasBuildPack=jonas_buildpack
# Name of an installed buildpack or url of a remote buildpack to be used for cf-vdr instances
cf.javaBuildPack=java_buildpack
# Name of an installed buildpack or url of a remote buildpack to be used for online internet instances
cf.online.jonasBuildPack=

# Optional HTTP proxy when elpaaso is driving a cloudfoundry instance on the internet from on-prem networks, which requires going through
# and HTTP proxy.
internet.access.proxyHost=dummyInternetProxyHost
internet.access.proxyPort=7777


#Used to identify this instance of the paas in subscriptions it makes. Should be short, max 5 chars as this is used in
#some ids, such as CF app names. If left empty, Cf uses vcloudapi1.username instead
paas.instance.id=


# URL of the LDAP server to check of paas user identity on the login page
ldap.url=

# LDAP manager credentials. This is used for dynamically adding authenticated users to LDAP groups.
ldap.manager_dn=
ldap.manager_password=

# The specific pattern used to build the user's DN
ldap.user_base_dn=

# Search base for group membership searches and additions.
ldap.paas_group_dn=
ldap.splunk_group_dn=
ldap.nexus_group_dn=

# Enable or disable the auto registration of the user to the preceding ldap groups on first connect
ldap.auto_add_user_groups.enabled=

# URLs for account management on ElPaaso portal (i.e. self registration into the LDAP instance which performs
# email verification)
pwm.signup.url=
pwm.recover.url=


# ask iaas quota each 10 minutes
# TODO: remove, deprecated
iaas.schedule.repeatIntervalMs=600000

#Dbaas credentials. Should be deprecated soon in favor of the dbaas service broker
dbaas10.url=
dbaas10.user=
dbaas10.password=
dbaas10.groupname=
#dbaas10 connection and receive timeout in ms
dbaas10.timeout=30000

# Orange Store Enabler credentials.
# TODO: remove. This is deprecated and support was removed. This should be replaced by Object store brokers (RiakCS, Swift).
#
# These are read by projection for injection to the apps by JNDI
# dev.store instance
store.core.url=
store.admin.id=
store.admin.pwd=

# Splunk credentials
# Splunk server is used for the syslog IP injected as user-provided service. Deprecated (pending code clean up to always use service broker).
# Splunk portal is the splunk UI used to display deep urls to splunk search pages in the environment page.
splunk.portal.ip=
splunk.portal.port=
splunk.portal.secured=false

# Maven Connector Configuration
# This is were application artefact binaries are fetched from.

#Frequency to check for new releases. Default is 10
maven.release.repository.refresh.minutes=20
#Frequency to check for new snapshots. Default is 10
maven.snapshot.repository.refresh.minutes=20

#Main repo to pull artefact from to deploy on PaaS
#uses IP so the QA artifactory accessible from Faas AND from elpaaso inside cloudfoundry
maven.pull.repository.url=

#Main repo to pull artefact from to deploy on PaaS (unsed)
maven.pull.repository.id=
#Release repo url used to publish artefact. Not currently used but still required at startup
maven.push.repository.release.url=
#Username to deploy on release repo
maven.push.repository.release.user=
#Password to deploy on release repo
maven.push.repository.release.password=
#Snapshot repo url used to publish artefact
maven.push.repository.snapshot.url=
#Username to deploy on snapshot repo
maven.push.repository.snapshot.user=
#Password to deploy on snapshot repo
maven.push.repository.snapshot.password=
#Maven local repo where resolved artefact are stored - On Faas it is not possible to write in /opt/application/...
maven.local.repository.path=target/maven/local-repo/
#Mvn consumer working dir, used for deployment - On Faas it is not possible to write in /opt/application/...
maven.local.work.dir=target/maven/workdir/
maven.local.repository.start.cleanup=false

# ==========================================================================================
# Feature toggles
# Note that following properties are not used in test but shall be defined for production
# ==========================================================================================

# Iaas capacity toggle: enable to activate iaas capacity monitoring
# TODO: deprecated, should be removed and replaced by doppler capacity metrics and associated alarms
IAAS_CAPACITY=false

# ==========================================================================================
# Credentials and properties used for tests: 
#   test VMs for jonas, apache, DBaaS, ...
# Those entries should not be added in production
# ===========================================================================================

# Test Main repo to pull artefact from to deploy on PaaS
#uses IP so the QA artifactory accessible from Faas AND from elpaaso inside cloudfoundry
test.maven.pull.repository.url=

#Main repo to pull artefact from to deploy on PaaS (unsed)
test.maven.pull.repository.id=public
#Release repo url used to publish artefact. Not currently used but still required at startup
test.maven.push.repository.release.url=
# Test Username to deploy on release repo
test.maven.push.repository.release.user=
#Password to deploy on release repo
test.maven.push.repository.release.password=
#Snapshot repo url used to publish artefact
test.maven.push.repository.snapshot.url=
#Username to deploy on snapshot repo
test.maven.push.repository.snapshot.user=
#Password to deploy on snapshot repo
test.maven.push.repository.snapshot.password=

# User used for DB creation in test
test.db.creation.user=
# Password used for DB creation in test
test.db.creation.password=


#Version of a test artefact in by mvn tests
test.elpaaso.version=${project.version}

# used by Tests & Garbage collector to create & determine test resource to collect.
test.it.user.email=user.test@mail.fr

# TODO: remove, Deprecated
# default VM used for activation plugins test
test.default.plugintest.vmName=
test.default.plugintest.rootPassword=

# default EAR and SQL used for activation plugins test
test.default.plugintest.earUrl=
test.default.plugintest.dbaasSqlScript=

# Database used to test database migration using liquibase (export and update, see cloud-paas-db module)
# Precisely credentials of the sanitized production DB copy used for automated tests.
test.liquibase.futcopy.host=
test.liquibase.futcopy.port=
test.liquibase.futcopy.dbname=
test.liquibase.futcopy.user=
test.liquibase.futcopy.password=

#Dbaas credentials used for generating dynamically a pg/mysql database instance for junit tests.

test.dbaas10.url=
test.dbaas10.user=
test.dbaas10.password=
test.dbaas10.groupname=
test.dbaas10.timeout=30000

#TODO remove, Deprecated: organization label (in relation to vcloudapi1.orgname) in the automatic hyperic alert creation
paas.organization=

### PaaS database maintenance
# purge older environments
# paas.schedule.databasePurge.enabled=disabled
paas.schedule.databasePurge.enabled=true

# default retention delay : environment created 5 day ago will be considered as older and purged.
paas.schedule.databasePurge.retentionDelayInDay=5
# purge schedule : default is repeating every 8 hours
# doc : http://static.springsource.org/spring/docs/3.0.5.RELEASE/reference/scheduling.html#scheduling-task-namespace-scheduled-tasks
paas.schedule.databasePurge.cron=0 0 */08 * * ?

# CRaSH configuration. See http://www.crashub.org/reference.html#d5e62 for full reference.

# Enables the CRaSH SSH console for paas admins. Set to "enabled" to have it start or "disabled" to prevent
# it from starting
paas.ops.crash.enabled=disabled

#   Telnet configuration is DISABLED : (would need 'crsh.shell.telnet' maven dependency)
#   SSH configuration is ENABLED. Port should be > 1064 as paas is not running as root.
paas.crash.ssh.port=2000

# SSH Authentication configuration.
# auth values : simple (login/pwd) / key (ssh public key) / jaas (pluggeable jaas auth)
paas.crash.auth=simple
paas.crash.auth.simple.username=
# Jasypt encrypted password: "admin" in default example, refer to EcryptorPasswordTest class
# on how to encrypt passwords.
paas.crash.auth.simple.password=
# sample SSH key auth: points to the local file system path
# paas.crash.auth.key.path=/Users/julien/.ssh/id_dsa.pem
# sample jaas domain auth
# paas.crash.auth.jaas.domain=my-domain

# Custom hot-reloaded groovy commands directory on local filesystem. May need to manually create this directory.
# If the directory is missing at webapp startup, this directory is then ignored until webapp restart.
paas.crash.directory=

# VFS configuration : time between virtual FS refresh (in seconds). Controls how often custom groovy commands are checked
# for updates and reloaded
paas.crash.vfs.refresh_period=30



# WSO2 ESB credentials
# This will soon be deprecated and be moved into a service broker with artibitrary service param instead.

#credential to access WSO2 admin API
wso2.authent.api=
wso2.esb.api=
wso2.esb.apiEndpoint=
wso2.esb.user=
wso2.esb.password=
wso2.esb.hostname=
wso2.esb.proxy.baseurl=
wso2.esb.activemq.protocol=
wso2.esb.activemq.hostname=
wso2.esb.activemq.port=
wso2.esb.jms.activemq.connectionFactoryJNDIName=
wso2.esb.jms.activemq.JNDIFactory=
wso2.esb.mqseries.hostname=
wso2.esb.mqseries.port=
wso2.esb.mqseries.qmanager=

# TODO: remove, Deprecated
#default vm root user password
paas.vm.rootuser.default.password=

# Optionally delete database content on startup. This may be used to wipe out a corrupted db for tests instances
# whose content is not needed anymore.
# This property should always be set to false and overridden in var_env
cleaner.db.enabler=false

# Contact email displayed by GUI
contactus.mailTo=
